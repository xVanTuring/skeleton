@import "./colors.scss";
$grid-size: 170px;
$grid-color: #363636;
$dark-color: darken($grid-color, 10%);
$th: 0.008;

@function line($dir, $t, $w, $color) {
  $start: $grid-size * $t - $w * $grid-size;
  $end: $grid-size * $t + $w * $grid-size;
  @return linear-gradient(
    to $dir,
    transparent $start,
    $color $start,
    $color $end,
    transparent $end
  );
}

@function lines($dir) {
  @return line($dir, 0.5, $th * 2, $grid-color),
    line($dir, 0.25, $th, $grid-color), line($dir, 0.75, $th, $grid-color),
    line($dir, 1, $th * 2, $grid-color);
}

.custom-node-editor {
  .background {
    z-index: -5;
    background-size: $grid-size $grid-size;
    background-image: line(right, 0.5, $th * 3, $dark-color),
      line(bottom, 0.5, $th * 3, $dark-color), lines(right), lines(bottom);
    background-color: darken($grid-color, 6%);
  }
  * {
    box-sizing: border-box;
  }
}

.connection path {
  fill: none;
  stroke: #eee;
  stroke-width: 2px;
  pointer-events: none;
  &.active {
    stroke: #aaa;
  }
}
.connection.socket-input-property.socket-output-property path {
  stroke: $socker-property-color;
}
.connection.socket-input-number.socket-output-number path {
  stroke: $socker-number-color;
}
.connection.socket-input-ref.socket-output-ref path {
  stroke: $socker-ref-color;
}
.connection.socket-input-variable.socket-output-variable path {
  stroke: $socker-variable-color;
}
.connection.socket-input-keyframe.socket-output-keyframe path {
  stroke: $socker-keyframe-color;
}
.connection.socket-input-bool.socket-output-bool path {
  stroke: $socker-bool-color;
}
.connection.socket-input-ease.socket-output-ease path {
  stroke: $socker-ease-color;
}
.connection .main-path{
  stroke: rgba(255, 255, 255, 0.7);
}